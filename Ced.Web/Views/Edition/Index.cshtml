@using Ced.BusinessEntities
@using Ced.Resources
@using ITE.Utility.Extensions
@model Ced.Web.Models.Edition.EditionIndexModel

@{
    ViewBag.Title = Resources.Editions;
}

<div class="small-header">
    <div class="hpanel">
        <div class="panel-body">
            <h2 class="font-light m-b-xs">
                @Resources.Editions
            </h2>
            <div id="hbreadcrumb" class="pull-left">
                <ol class="hbreadcrumb breadcrumb">
                    <li><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                    <li>
                        <span>@Resources.Editions</span>
                    </li>
                    <li class="active">
                        <span>@Resources.EditionList @(Model.EventId > 0 ? " (" + Model.EventName + ")" : "")</span>
                    </li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content animate-panel">
    <div class="row">
        <div class="col-lg-12">
            <div class="hpanel">
                <div class="panel-body">
                    <div class="table-responsive">
                        <table id="tblEditions" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        @Resources.EventName
                                    </th>
                                    <th>
                                        Edition
                                    </th>
                                    <th>
                                        Start Date
                                    </th>
                                    <th>
                                        End Date
                                    </th>
                                    <th>
                                        Event Director
                                    </th>
                                    <th class="no-sort"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Editions)
                                {
                                    <tr>
                                        <td>
                                            @if (item.Status != EditionStatusType.Approved && item.Status != EditionStatusType.Published)
                                            {
                                                <i class="fa @(item.Status.GetAttribute<EditionStatusAttribute>().FaIcon) text-danger" title="@item.Status.ToString()"></i>
                                            }
                                            @item.EditionName
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(m => item.EditionNo)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(m => item.StartDate)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(m => item.EndDate)
                                        </td>
                                        <td>
                                            <a href="mailto:@item.DirectorEmail">@Html.DisplayFor(m => item.DirectorFullName)</a>
                                        </td>
                                        <td class="text-center nowrap">
                                            @if (item.IsClonable)
                                            {
                                                if (Model.CurrentUser.IsSuperAdmin || (item.DirectorEmail != null && item.DirectorEmail.ToLower() == Model.CurrentUser.CurrentUser.Email.ToLower()))
                                                {
                                                    <a style="padding: 5px" href="@Url.RouteUrl("EditionClone", new {id = item.EditionId, name = item.EditionName.ToUrlString()})" data-id="@item.EditionId" class="clonable" title="Clone Edition">
                                                        <small><i class="fa fa-clone fa-2x text-danger"></i></small>
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span title="Not Clonable. Reason(s): @item.IsClonableDesc">
                                                    <a style="padding: 5px" href="#" class="clonable disabled">
                                                        <small><i class="fa fa-clone fa-2x text-danger"></i></small>
                                                    </a>
                                                </span>
                                            }
                                            @if (item.Status == EditionStatusType.Published || item.Status == EditionStatusType.Approved)
                                            {
                                                <a style="padding: 5px" href="@Url.Action("Details", "Edition", new {id = item.EditionId, name = item.EditionName.ToUrlString()})" title="View Edition">
                                                    <small><i class="fa fa-eye fa-2x" style="color: #34495e"></i></small>
                                                </a>
                                            }
                                            else
                                            {
                                                <span title="Not Viewable">
                                                    <a style="padding: 5px" href="#" class="disabled">
                                                        <small><i class="fa fa-eye fa-2x" style="color: #34495e"></i></small>
                                                    </a>
                                                </span>
                                            }

                                            @if (item.IsEditable)
                                            {
                                                if (item.Status == EditionStatusType.Published || item.Status == EditionStatusType.Approved)
                                                {
                                                    <a style="padding: 5px" href="@Url.Action("Edit", "Edition", new {id = item.EditionId, name = item.EditionName.ToUrlString()})" title="Edit Edition">
                                                        <small><i class="fa fa-edit fa-2x" style="color: #62CB31"></i></small>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a style="padding: 5px" href="@Url.Action("Draft", "Edition", new {id = item.EditionId, name = item.EditionName.ToUrlString()})" title="Edit Draft">
                                                        <small><i class="fa fa-edit fa-2x" style="color: #62CB31"></i></small>
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <span title="Not Editable. Reason(s): @item.IsEditableDesc">
                                                    <a style="padding: 5px" href="#" class="disabled">
                                                        <small><i class="fa fa-edit fa-2x" style="color: #62CB31"></i></small>
                                                    </a>
                                                </span>
                                            }

                                            @if (item.Status == EditionStatusType.PreDraft || item.Status == EditionStatusType.Draft)
                                            {
                                                <a style="padding: 5px" href="@Url.Action("Delete", "Edition", new {id = item.EditionId})" class="delete-edition" title="Delete Edition">
                                                    <small><i class="fa fa-trash fa-2x text-danger"></i></small>
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div>
                        @if (Model.EventId > 0)
                        {
                            <a class="btn btn-orange" href="@Url.Action("Index", "Dashboard", new { id = Model.EventId, name = Model.EventName.ToUrlString() })" title="Dashboard for @Model.EventName" target="_blank"><i class="fa fa-line-chart fa-lg"></i> Dashboard</a>
                        }
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/datatables/css")
    @Styles.Render("~/bundles/sweetalert/css")

    <style>
        .dataTable > thead > tr > th[class*="no-sort"]:after {
            content: "" !important;
        }

        .table-responsive {
            overflow-x: hidden;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatables/js")
    @Scripts.Render("~/bundles/datatablesBootstrap/js")
    @Scripts.Render("~/bundles/sweetalert/js")

    <script type="text/javascript">
        $(function () {
            $('#tblEditions').dataTable({
                "iDisplayLength": 10,
                "order": [],
                "oLanguage": {
                    "sSearch": "Quick filter:"
                }
            });
        });
    </script>

    <script>
        function newEditionPopup() {
            $(document).ready(function () {
                setTimeout(function () {
                    swal({
                        title: "How to create a new edition",
                        html:
                            "To create a new edition please clone <i class='fa fa-clone text-danger'></i> an existing edition by selecting from the list",
                        type: "info"
                    });
                },
                    100);
            });
        }

        if (window.location.hash.indexOf("newedition") > -1) {
            newEditionPopup();
        }
    </script>

    @if (Request.Url.AbsoluteUri.ToLower().Contains("/newedition"))
    {
        <script>
            newEditionPopup();
        </script>
    }

    <script>
        $(".clonable").on("click",
            function (e) {
                e.preventDefault();
                var editionId = $(e.currentTarget).attr("data-id");
                swal({
                    title: "Are you sure?",
                    text: "You are about to clone this edition.",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, clone it!"
                }).then(function () {
                    swal({
                        title: "Cloning",
                        text: "Draft event is being cloned...",
                        imageUrl: "https://itedata.blob.core.windows.net/ced/swal-loading.png",
                        imageClass: "fa-spin",
                        showConfirmButton: false,
                        allowOutsideClick: false
                    });
                    clone(e, editionId);
                }).done();
            });

        /*CLONE*/
        function clone(e, editionId) {
            $.ajax({
                url: e.currentTarget.href,
                type: "POST",
                dataType: "json",
                data: { "id": editionId },
                success: function (result) {
                    if (result.success === true) {
                        swal({
                            title: "Cloned!",
                            html: result.message,
                            type: "success",
                            allowOutsideClick: false
                        }).then(function () {
                            location.href = result.returnUrl;
                        },
                            function () {
                                location.href = result.returnUrl;
                            });
                    } else {
                        swal({
                            title: "Error!",
                            html: result.message,
                            type: "error"
                        });
                    }
                },
                error: function (xhr, textStatus, error) {
                    swal({
                        title: "Error!",
                        html: xhr.statusText,
                        type: textStatus
                    });
                }
            });
        }
    </script>

    <script>
        $('.delete-edition').on('click',
            function (e) {
                e.preventDefault();
                var url = this.href;
                swal({
                    title: "Are you sure?",
                    text: "You are about to delete this edition.",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!"
                }).then(function () {
                    window.location.href = url;
                }).done();
            });
    </script>
}